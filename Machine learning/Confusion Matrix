import numpy as np
from sklearn import metrics
import matplotlib.pyplot as plt

#creating actual predicted data that we gonna do our analytics  
actual = np.random.binomial(1, 0.9, size = 1000)
predicted = np.random.binomial(1, 0.9 , size = 1000)

#creating our confusion matrix base on actual and predicted data
confusion_matrix = metrics.confusion_matrix(actual, predicted)

#Make the confusion metric visuable  
cm_display = metrics.ConfusionMatrixDisplay(confusion_matrix = confusion_matrix, display_labels =[False, True])

#calculate the accuracy of predicted data
Accuracy = metrics.accuracy_score(actual, predicted)

#calculate the Precision of predicted data
Precision = metrics.precision_score(actual, predicted)

#calculate the recall_score of predicted data
Sensitivity_recall = metrics.recall_score(actual, predicted)


Specificity = metrics.recall_score(actual, predicted, pos_lable=0)

#calculate the recall_score of predicted data
F1_score = metrics.f1_score(actual, predicted)

cm_display.plot()
plt.show()

print({"Accuracy":Accuracy,"Precision":Precision,"Sensitivity_recall":Sensitivity_recall,"Specificity":Specificity,"F1_score":F1_score})
